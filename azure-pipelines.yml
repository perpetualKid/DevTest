trigger: 
    none

parameters:
- name: channelName
  displayName: Build Channel Name
  type: string
  default: dev
  values:
  - dev
  - ci
  - release

stages:
- stage: Prep
  jobs:
  - job: GetVersion
    pool:
      vmImage: 'windows-latest'
    steps:
    - checkout: none

    - task: PowerShell@2
      displayName: Get the version from directory.builds.props
      name: setVariableStep
      inputs:
        targetType: 'inline'
        script: |
          [string] $version = $env:originVersion 
          Write-Host "Updating the value of the buildVersion to '$version'."
          Write-Host "##vso[task.setvariable variable=versionFromCode;isOutput=true;]$version";
          Write-Host "##vso[task.setvariable variable=pipelineVersionFromCode;isOutput=true;]$version";
          $HtmlHead = @"
          <style>
          TABLE {border-width: 1px; border-style: solid; border-color: black; border-collapse: collapse;}
          TH {border-width: 1px; padding: 3px; border-style: solid; border-color: black; background-color: #6495ED;}
          TD {border-width: 1px; padding: 3px; border-style: solid; border-color: black;}
          </style>
          <title>Commit History</title>
          "@
          Write-Host $HtmlHead                    

    - task: PowerShell@2
      displayName: Show the version
      name: setVariableStep2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Current versionFromCode is '$(setVariableStep.versionFromCode)'."
          Write-Host "Current pipelineVersionFromCode is '$(setVariableStep.pipelineVersionFromCode)'."
          Write-Host "##vso[task.setvariable variable=pipelineVersionFromCode;isOutput=true;]Reset";


    - task: PowerShell@2
      displayName: Show another version
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Current versionFromCode is '$(setVariableStep.versionFromCode)'."
          Write-Host "Current pipelineVersionFromCode is '$(setVariableStep.pipelineVersionFromCode)'."
          Write-Host "Current pipelineVersionFromCode2 is '$(setVariableStep2.pipelineVersionFromCode)'."


  - job: TestingVariables
    dependsOn: GetVersion
    pool:
      vmImage: 'windows-latest'
    variables:
#      system.debug: true
      code1: $[dependencies.GetVersion.outputs['setVariableStep2.pipelineVersionFromCode']]
      code2: $[dependencies.GetVersion.outputs['setVariableStep.pipelineVersionFromCode']]
      version1:  $[counter(variables['code1'], 0)]
      version2:  $[counter(variables['code2'], 0)]
      githubUrl: 'https://github.com/perpetualKid/ORTS-MG/commit/'

      environment2:  $[if ne( variables['channel'], '' ) 'empty'

#      ${{ if ne( variables['channel'], '' ) }}: 
#        environment: $(channel)-variables['channel']
#      ${{ if eq( variables['channel'], '' ) }}: 
#        environment: 'empty'
      #environment: $(channel)-variables['channel']
      ${{if notin( parameters.channelName, 'dev', 'ci' )}}: 
        environment: 'RELEASE Build'
      ${{if in( parameters.channelName, 'dev', 'ci' )}}: 
        environment: 'DEBUG Build'

    steps:
#    - checkout: none

    - task: PowerShell@2
      displayName: Set the name of the build
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Current version1 is '$(version1)', '$(code1)'."
          Write-Host "Current version2 is '$(version2)', '$(code2)'."
          Write-Host "Current version is '$(environment)', '$(environment2)'."
          $html = git log --pretty=format:"%h|%ad|%an|%s" --date=format:"%Y-%m-%dT%H:%MZ" -100 `
          | ConvertFrom-Csv -Delimiter "|" -Header "Commit", "Date", "Author", "Message" `
          | ConvertTo-Html -title "Open Rails Commit History Channel=$(channel) Version=$(version1)" `
          -Property @{Label="Link";Expression={"<a href='$(githubUrl)$($_.Commit)'>$($_.Commit)</a>"}}, Date, Author, Message
          [System.Net.WebUtility]::HtmlDecode($html) | Out-File $(Build.ArtifactStagingDirectory)/history.html
          Write-Host "HTml '$($html)'"
          [System.Net.WebUtility]::HtmlDecode($html) | Out-File $(Build.ArtifactStagingDirectory)/history.html

    - task: PowerShell@2
      condition: false 
      displayName: Create the versions table
      inputs:
        targetType: 'inline'
        script: |
          $versionTable = ''
          try 
          { 
            $versionTableString = (new-object System.Net.WebClient).DownloadData("https://ultimaterails.blob.core.windows.net/builds/devtest/version.json")
            $versionTableString = [System.Text.Encoding]::Unicode.GetString($versionTableString)
            $versionTable = $versionTableString.TrimStart([char]65279) | ConvertFrom-Json
            Write-Host "versionTableString '$($versionTableString)'"
            Write-Host "versionTable '$($versionTable)'"
          }
          catch { $versionTable  = [PSCustomObject]@{ "channels" = @()}}
          $release = $versionTable.channels | where {$_.name -eq '$(channel)'}
          Write-Host "versionTable '$($versionTable)'"
          Write-Host "versionTablechannel '$($versionTable.channnels)'"
          Write-Host " Release '$($release)'"
          $date = get-date
          $date = $date.AddTicks(-$date.Ticks % [TimeSpan]::TicksPerSecond)
          $date = $date.ToUniversalTime().ToString("o")
          Write-Host " '$($date)'"
          if ($release -ne $null)
          {
            $release.date = $date
            $release.version = $(version1)
          }
          else          
          { 
            $release = [PSCustomObject]@{name ='$(channel)'; date = $date; url = 'http://Texas'; version = '3.0'}
            $versionTable.channels += $release
          }
          $json = $versionTable | ConvertTo-Json -Depth 8
          $json | Out-File $(Build.ArtifactStagingDirectory)/version.json
          Write-Host "Json '$($json)'"
          [System.Net.WebUtility]::HtmlDecode($html) | Out-File $(Build.ArtifactStagingDirectory)/history.html

    - task: AzureFileCopy@3
      condition: false 
      displayName: Uploading history logs to Azure
      inputs:
        SourcePath: '$(Build.ArtifactStagingDirectory)'
        azureSubscription: 'Azure Enterprise'
        Destination: 'AzureBlob'
        StorageAccountRM: 'ultimaterails'
        ContainerName: 'builds'
        BlobPrefix: 'citest'
        additionalArgumentsForBlobCopy: '/Pattern:*.html /Y /SetContentType:text/html'

    - task: AzureFileCopy@3
      condition: false 
      displayName: Uploading version table to Azure
      inputs:
        SourcePath: '$(Build.ArtifactStagingDirectory)'
        azureSubscription: 'Azure Enterprise'
        Destination: 'AzureBlob'
        StorageAccountRM: 'ultimaterails'
        ContainerName: 'builds'
        BlobPrefix: 'devtest'
        additionalArgumentsForBlobCopy: '/Pattern:*.json /Y /SetContentType:application/json'